// Generated by https://quicktype.io

class PopularModel {
  bool? adult;
  String? backdropPath;
  int? id;
  String? originalLanguage;
  String? originalTitle;
  String? overview;
  double? popularity;
  String? posterPath;
  String? releaseDate;
  String? title;
  double? voteAverage;
  int? voteCount;

  PopularModel({
    this.adult,
    this.backdropPath,
    this.id,
    this.originalLanguage,
    this.originalTitle,
    this.overview,
    this.popularity,
    this.posterPath,
    this.releaseDate,
    this.title,
    this.voteAverage,
    this.voteCount,
  });

  factory PopularModel.fromMap(Map<String, dynamic> map) {
    return PopularModel(
        backdropPath: map['backdrop_path'] ?? '',
        //cualense ??, si es nulo lo de la izquierda
        //asigna lo de la derecha
        id: (map['id'] is int) ? map['id'] : int.parse(map['id']),
        originalLanguage: map['original_language'],
        originalTitle: map['original_title'],
        overview: map['overview'],
        popularity: (map['popularity'] is double)
            ? map['popularity']
            : double.tryParse(map['popularity']),
        posterPath: map['poster_path'] ?? '',
        releaseDate: map['release_date'] ?? '',
        title: map['title'],
        voteAverage: (map['vote_average'] is String)
            ? double.tryParse((map['vote_average']))
            : (map['vote_average'] is int)
                ? (map['vote_average'] as int).toDouble()
                : map[
                    'vote_average'], //Si no tiene decimales lo pasamos a double
        voteCount: (map['vote_count'] is String
            ? int.tryParse(map['vote_count'])
            : map['vote_count']));
  }
}
